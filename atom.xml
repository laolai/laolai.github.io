<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <generator uri="https://gohugo.io/" version="0.96.0">Hugo</generator><title type="html"><![CDATA[多比Blog]]></title>
    
    
    
            <link href="https://laolai.github.io/atom.xml" rel="self" type="application/rss+xml" title="atom" />
            <link href="https://laolai.github.io/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://laolai.github.io/index.json" rel="alternate" type="application/json" title="JSON" />
    <updated>2022-04-12T11:13:15+08:00</updated>
    
    
    
    
        <id>https://laolai.github.io/atom.xml</id>
    
        
        <entry>
            <title type="html"><![CDATA[Hugo安装文档]]></title>
            <link href="https://laolai.github.io/first/" rel="alternate" type="text/html" />
            
                <id>https://laolai.github.io/first/</id>
            
            
            <published>2022-04-11T10:43:28+08:00</published>
            <updated>2022-04-11T10:43:28+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>
<p>Hugo 是由 Go 语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。</p>
</blockquote>
<h3 id="安装-hugo">安装 Hugo</h3>
<h4 id="1-二进制安装推荐简单快速">1. 二进制安装（推荐：简单、快速）</h4>
<p>到 <a href="https://github.com/spf13/hugo/releases">Hugo Releases</a> 下载对应的操作系统版本的 Hugo 二进制文件（hugo 或者 hugo.exe）</p>
<p>Mac 下直接使用 <code>Homebrew</code> 安装：</p>
<pre tabindex="0"><code>brew install hugo
</code></pre><h4 id="2-源码安装">2. 源码安装</h4>
<p>源码编译安装，首先安装好依赖的工具：</p>
<ul>
<li><a href="http://git-scm.com/">Git</a></li>
<li><a href="http://mercurial.selenic.com/">Mercurial</a></li>
<li><a href="http://golang.org/">Go</a> 1.3+ (Go 1.4+ on Windows)</li>
</ul>
<p>设置好 <code>GOPATH</code> 环境变量，获取源码并编译：</p>
<pre tabindex="0"><code>$ export GOPATH=$HOME/go
$ go get -v github.com/spf13/hugo
</code></pre><p>源码会下载到 <code>$GOPATH/src</code> 目录，二进制在 <code>$GOPATH/bin/</code></p>
<p>如果需要更新所有 Hugo 的依赖库，增加 <code>-u</code> 参数：</p>
<pre tabindex="0"><code>$ go get -u -v github.com/spf13/hugo
</code></pre><h3 id="生成站点">生成站点</h3>
<p>使用 Hugo 快速生成站点，比如希望生成到 <code>/path/to/site</code> 路径：</p>
<pre tabindex="0"><code>$ hugo new site /path/to/site
</code></pre><p>这样就在 <code>/path/to/site</code> 目录里生成了初始站点，进去目录：</p>
<pre tabindex="0"><code>$ cd /path/to/site
</code></pre><p>站点目录结构：</p>
<pre tabindex="0"><code>▸ archetypes/
  ▸ content/
  ▸ layouts/
  ▸ static/
    config.toml
</code></pre><h3 id="创建文章">创建文章</h3>
<p>创建一个 <code>about</code> 页面：</p>
<pre tabindex="0"><code>$ hugo new about.md
</code></pre><p><code>about.md</code> 自动生成到了 <code>content/about.md</code> ，打开 <code>about.md</code> 看下：</p>
<pre tabindex="0"><code>+++
date = &#34;2015-10-25T08:36:54-07:00&#34;
draft = true
title = &#34;about&#34;

+++

正文内容
</code></pre><p>内容是 <code>Markdown</code> 格式的，<code>+++</code> 之间的内容是 <a href="https://github.com/toml-lang/toml">TOML</a> 格式的，根据你的喜好，你可以换成 <a href="http://www.yaml.org/">YAML</a> 格式（使用 <code>---</code> 标记）或者 <a href="http://www.json.org/">JSON</a> 格式。</p>
<p>创建第一篇文章，放到 <code>post</code> 目录，方便之后生成聚合页面。</p>
<pre tabindex="0"><code>$ hugo new post/first.md
</code></pre><p>打开编辑 <code>post/first.md</code> ：</p>
<pre tabindex="0"><code>---
date: &#34;2015-10-25T08:36:54-07:00&#34;
title: &#34;first&#34;
 
---

### Hello Hugo

 1. aaa
 1. bbb
 1. ccc
</code></pre><h3 id="安装皮肤">安装皮肤</h3>
<p>到 <a href="https://www.gohugo.org/theme/">皮肤列表</a> 挑选一个心仪的皮肤，比如你觉得 <code>Hyde</code> 皮肤不错，找到相关的 <code>GitHub</code> 地址，创建目录 <code>themes</code>，在 <code>themes</code> 目录里把皮肤 <code>git clone</code> 下来：</p>
<pre tabindex="0"><code># 创建 themes 目录
$ cd themes
$ git clone https://github.com/spf13/hyde.git
</code></pre><h3 id="运行-hugo">运行 Hugo</h3>
<p>在你的站点根目录执行 <code>Hugo</code> 命令进行调试：</p>
<pre tabindex="0"><code>$ hugo server --theme=hyde --buildDrafts
</code></pre><p>（注明：v0.15 版本之后，不再需要使用 <code>--watch</code> 参数了）</p>
<p>浏览器里打开： <code>http://localhost:1313</code></p>
<h3 id="部署">部署</h3>
<p>假设你需要部署在 <code>GitHub Pages</code> 上，首先在 GitHub 上创建一个 Repository，命名为：<code>coderzh.github.io</code> （coderzh 替换为你的 github 用户名）。</p>
<p>在站点根目录执行 <code>Hugo</code> 命令生成最终页面：</p>
<pre tabindex="0"><code>$ hugo --theme=hyde --baseUrl=&#34;http://coderzh.github.io/&#34;
</code></pre><p>（注意，以上命令并不会生成草稿页面，如果未生成任何文章，请去掉文章头部的 <code>draft=true</code> 再重新生成。）</p>
<p>如果一切顺利，所有静态页面都会生成到 <code>public</code> 目录，将 pubilc 目录里所有文件 <code>push</code> 到刚创建的 Repository 的 <code>master</code> 分支。</p>
<pre tabindex="0"><code>$ cd public
$ git init
$ git remote add origin https://github.com/coderzh/coderzh.github.io.git
$ git add -A
$ git commit -m &#34;first commit&#34;
$ git push -u origin master
</code></pre><p>浏览器里访问：<code>http://coderzh.github.io/</code></p>
]]></content>
            
                 
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://laolai.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA" term="%E8%AE%A1%E7%AE%97%E6%9C%BA" label="计算机" />
                            
                        
                    
                
            
        </entry>
    
</feed>
